/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.User;
import model.UserHistory;

/**
 *
 * @author sanal
 */
public class AdminViewProfileJPanel extends javax.swing.JPanel {

    /**
     * Creates new form UserViewJPanel
     */
    
    User user;
    UserHistory history;
    User currentlyViewedUser = null;
    
    public AdminViewProfileJPanel(UserHistory history) {
        initComponents();
        this.user = user;
        this.history = history;
        populateTable();
    }

    private String hashPassword(String password) {
    try {
        MessageDigest md = MessageDigest.getInstance("SHA-256");
        byte[] hash = md.digest(password.getBytes());
        StringBuilder sb = new StringBuilder();
        for (byte b : hash) {
            sb.append(String.format("%02x", b));
        }
        return sb.toString();
    } catch (NoSuchAlgorithmException e) {
        e.printStackTrace();
        return null;
    }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtDob = new javax.swing.JTextField();
        lblDob = new javax.swing.JLabel();
        txtPhone = new javax.swing.JTextField();
        txtFirstname = new javax.swing.JTextField();
        lblPhone = new javax.swing.JLabel();
        lblFirstname = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        lblUserinfo = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        lblUsername = new javax.swing.JLabel();
        txtLastname = new javax.swing.JTextField();
        lblLastname = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        txtNeuid = new javax.swing.JTextField();
        lblNeuid = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUsers = new javax.swing.JTable();
        btntblSearch = new javax.swing.JButton();
        btntblDelete = new javax.swing.JButton();
        btntblView = new javax.swing.JButton();
        txtSearchNeuId = new javax.swing.JTextField();
        btnUpdateAdminData = new javax.swing.JButton();
        lblStatus = new javax.swing.JLabel();
        comboStatus = new javax.swing.JComboBox<>();

        txtDob.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        lblDob.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblDob.setText("Date Of Birth:");

        txtPhone.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtFirstname.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        lblPhone.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblPhone.setText("Phone:");

        lblFirstname.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblFirstname.setText("First Name:");

        txtEmail.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        lblUserinfo.setBackground(new java.awt.Color(204, 204, 255));
        lblUserinfo.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        lblUserinfo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUserinfo.setText("View Persons");

        lblEmail.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblEmail.setText("Email:");

        txtUsername.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        lblUsername.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblUsername.setText("Username:");

        txtLastname.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        lblLastname.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblLastname.setText("Last Name:");

        lblPassword.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblPassword.setText("Password:");

        txtNeuid.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        lblNeuid.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblNeuid.setText("NEU ID:");

        txtPassword.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        tblUsers.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Username", "Password", "First Name", "Last Name", "NEU ID", "DOB", "Phone", "Email", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblUsers);

        btntblSearch.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btntblSearch.setText("Search");
        btntblSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntblSearchActionPerformed(evt);
            }
        });

        btntblDelete.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btntblDelete.setText("Delete");
        btntblDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntblDeleteActionPerformed(evt);
            }
        });

        btntblView.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btntblView.setText("View");
        btntblView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntblViewActionPerformed(evt);
            }
        });

        txtSearchNeuId.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        btnUpdateAdminData.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnUpdateAdminData.setText("Update");
        btnUpdateAdminData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateAdminDataActionPerformed(evt);
            }
        });

        lblStatus.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblStatus.setText("Role:");

        comboStatus.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        comboStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "User", "Person" }));
        comboStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboStatusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblUserinfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtSearchNeuId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btntblSearch)
                        .addGap(453, 453, 453)
                        .addComponent(btntblView)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btntblDelete)
                        .addGap(0, 730, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblEmail)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblPhone)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblDob)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtDob, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblNeuid)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtNeuid, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblLastname)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtLastname, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblFirstname)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtFirstname, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblPassword)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblUsername)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblStatus)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(comboStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(571, 571, 571))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnUpdateAdminData)
                .addGap(638, 638, 638))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {comboStatus, lblDob, lblEmail, lblFirstname, lblLastname, lblNeuid, lblPassword, lblPhone, lblStatus, lblUsername, txtDob, txtEmail, txtFirstname, txtLastname, txtNeuid, txtPassword, txtPhone, txtSearchNeuId, txtUsername});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(lblUserinfo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btntblSearch)
                    .addComponent(btntblDelete)
                    .addComponent(btntblView)
                    .addComponent(txtSearchNeuId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUsername))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPassword)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFirstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFirstname))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLastname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLastname))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNeuid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNeuid))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDob))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPhone))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmail))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStatus)
                    .addComponent(comboStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnUpdateAdminData)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {comboStatus, lblDob, lblEmail, lblFirstname, lblLastname, lblNeuid, lblPassword, lblPhone, lblStatus, lblUsername, txtDob, txtEmail, txtFirstname, txtLastname, txtNeuid, txtPassword, txtPhone, txtUsername});

    }// </editor-fold>//GEN-END:initComponents

    private void btntblDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntblDeleteActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = tblUsers.getSelectedRow();
        
        if (selectedRowIndex<0)
        {
            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblUsers.getModel();
        User selectedUser = (User) model.getValueAt(selectedRowIndex, 0);
        
        history.deleteUser(selectedUser);
        
        populateTable();

        
        JOptionPane.showMessageDialog(this, "User Deleted.");
        
    }//GEN-LAST:event_btntblDeleteActionPerformed

    private void btntblViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntblViewActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = tblUsers.getSelectedRow();
        
        if (selectedRowIndex<0) {
            
            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblUsers.getModel();
        User selectedUser = (User) model.getValueAt(selectedRowIndex, 0);
        
        txtUsername.setText(String.valueOf(selectedUser.getUsername()));
        txtPassword.setText(String.valueOf(selectedUser.getPassword()));
        txtFirstname.setText(String.valueOf(selectedUser.getFirstname()));
        txtLastname.setText(String.valueOf(selectedUser.getLastname()));
        txtNeuid.setText(String.valueOf(selectedUser.getNeuid()));
        txtDob.setText(String.valueOf(selectedUser.getDob()));
        txtPhone.setText(String.valueOf(selectedUser.getPhone()));
        txtEmail.setText(String.valueOf(selectedUser.getEmail()));
        comboStatus.setSelectedItem(selectedUser.getStatus());
        
        currentlyViewedUser = selectedUser;
        
    }//GEN-LAST:event_btntblViewActionPerformed

    private void btntblSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntblSearchActionPerformed
        // TODO add your handling code here:
        
        String searchNeuId = txtSearchNeuId.getText().trim();
        populateTable(searchNeuId);
        
    }//GEN-LAST:event_btntblSearchActionPerformed

    private void btnUpdateAdminDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateAdminDataActionPerformed
        // TODO add your handling code here:
        
        if (currentlyViewedUser == null) {
        JOptionPane.showMessageDialog(this, "No user currently being viewed.");
        return;
    }
    
        currentlyViewedUser.setUsername(txtUsername.getText().trim());
        currentlyViewedUser.setPassword(new String(txtPassword.getPassword()).trim());
        currentlyViewedUser.setFirstname(txtFirstname.getText().trim());
        currentlyViewedUser.setLastname(txtLastname.getText().trim());
        currentlyViewedUser.setNeuid(txtNeuid.getText().trim());
        currentlyViewedUser.setDob(txtDob.getText().trim());
        currentlyViewedUser.setPhone(txtPhone.getText().trim());
        currentlyViewedUser.setEmail(txtEmail.getText().trim());
        currentlyViewedUser.setStatus(((String) comboStatus.getSelectedItem()).trim());
    
        String username = txtUsername.getText();
        String password = txtPassword.getText();
        String firstname = txtFirstname.getText();
        String lastname = txtLastname.getText();
        String neuid = txtNeuid.getText();
        String dob = txtDob.getText();
        String phone = txtPhone.getText();
        String email = txtEmail.getText();
        
        if(username.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Username cannot be empty.");
            return;
        }

        if(password.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Password can't be empty.");
            return;
        }

        if(firstname.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Firstname cannot be empty.");
            return;
        }

        if(lastname.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Lastname cannot be empty.");
            return;
        }

        if(neuid.isEmpty() || !neuid.matches("[0-9]+")) {
            JOptionPane.showMessageDialog(this, "NEU ID should be numeric and cannot be empty.");
            return;
        }

        if(!dob.matches("\\d{4}-\\d{2}-\\d{2}")) {
            JOptionPane.showMessageDialog(this, "DOB should be in format YYYY-MM-DD.");
            return;
        }

        if(!phone.matches("\\d{10}")) {
            JOptionPane.showMessageDialog(this, "Phone number should be 10 digits.");
            return;
        }

        if(email.isEmpty() || !email.contains("@")) {
            JOptionPane.showMessageDialog(this, "Invalid email address.");
            return;
        }
    
    populateTable();
    
    JOptionPane.showMessageDialog(this, "User data updated.");
    
    }//GEN-LAST:event_btnUpdateAdminDataActionPerformed

    private void comboStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboStatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboStatusActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnUpdateAdminData;
    private javax.swing.JButton btntblDelete;
    private javax.swing.JButton btntblSearch;
    private javax.swing.JButton btntblView;
    private javax.swing.JComboBox<String> comboStatus;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDob;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblFirstname;
    private javax.swing.JLabel lblLastname;
    private javax.swing.JLabel lblNeuid;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPhone;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblUserinfo;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JTable tblUsers;
    private javax.swing.JTextField txtDob;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFirstname;
    private javax.swing.JTextField txtLastname;
    private javax.swing.JTextField txtNeuid;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtSearchNeuId;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables



    private void populateTable() {

        DefaultTableModel model = (DefaultTableModel) tblUsers.getModel();
        model.setRowCount(0);
        
        
        for (User nu : history.getHistory()){
            
            Object[] row = new Object[9];
            row[0] = nu;
            row[1] = hashPassword(nu.getPassword());
            row[2] = nu.getFirstname();
            row[3] = nu.getLastname();
            row[4] = nu.getNeuid();
            row[5] = nu.getDob();
            row[6] = nu.getPhone();
            row[7] = nu.getEmail();
            row[8] = nu.getStatus();
            
            model.addRow(row);
        }
    }
    
    private void populateTable(String filterNeuId) {
    DefaultTableModel model = (DefaultTableModel) tblUsers.getModel();
    model.setRowCount(0);
    
    for (User nu : history.getHistory()) {
        if (!filterNeuId.isEmpty() && !nu.getNeuid().equals(filterNeuId)) {
            continue;
        }
        
        Object[] row = new Object[9];
        row[0] = nu;
        row[1] = nu.getPassword();
        row[2] = nu.getFirstname();
        row[3] = nu.getLastname();
        row[4] = nu.getNeuid();
        row[5] = nu.getDob();
        row[6] = nu.getPhone();
        row[7] = nu.getEmail();
        row[8] = nu.getStatus();
        
        model.addRow(row);
    }
}
    
    
}
